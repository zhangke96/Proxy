// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>

#include <algorithm>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_message_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_CloseConnectionRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_DataRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_Head;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_ListenRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_LogoutRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_NewConnectionRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_PauseSendRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_Ping;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_ResponseCode;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_ResumeSendRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<16>
        scc_info_Body;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<1>
        scc_info_CloseConnectionResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<1>
        scc_info_DataResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<1>
        scc_info_ListenResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<1>
        scc_info_LogoutResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<1>
        scc_info_NewConnectionResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<1>
        scc_info_PauseSendResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<1>
        scc_info_Pong;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_message_2eproto ::google::protobuf::
    internal::SCCInfo<1>
        scc_info_ResumeSendResponse;
}  // namespace protobuf_message_2eproto
namespace proto {
class MessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message> _instance;
} _Message_default_instance_;
class HeadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Head> _instance;
} _Head_default_instance_;
class BodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Body> _instance;
} _Body_default_instance_;
class ResponseCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseCode> _instance;
} _ResponseCode_default_instance_;
class ListenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListenRequest> _instance;
} _ListenRequest_default_instance_;
class ListenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListenResponse> _instance;
} _ListenResponse_default_instance_;
class PingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ping> _instance;
} _Ping_default_instance_;
class PongDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pong> _instance;
} _Pong_default_instance_;
class LogoutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogoutRequest> _instance;
} _LogoutRequest_default_instance_;
class LogoutResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogoutResponse> _instance;
} _LogoutResponse_default_instance_;
class NewConnectionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewConnectionRequest>
      _instance;
} _NewConnectionRequest_default_instance_;
class NewConnectionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewConnectionResponse>
      _instance;
} _NewConnectionResponse_default_instance_;
class CloseConnectionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseConnectionRequest>
      _instance;
} _CloseConnectionRequest_default_instance_;
class CloseConnectionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseConnectionResponse>
      _instance;
} _CloseConnectionResponse_default_instance_;
class DataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataRequest> _instance;
} _DataRequest_default_instance_;
class DataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataResponse> _instance;
} _DataResponse_default_instance_;
class PauseSendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PauseSendRequest>
      _instance;
} _PauseSendRequest_default_instance_;
class PauseSendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PauseSendResponse>
      _instance;
} _PauseSendResponse_default_instance_;
class ResumeSendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResumeSendRequest>
      _instance;
} _ResumeSendRequest_default_instance_;
class ResumeSendResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResumeSendResponse>
      _instance;
} _ResumeSendResponse_default_instance_;
}  // namespace proto
namespace protobuf_message_2eproto {
static void InitDefaultsMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Message_default_instance_;
    new (ptr)::proto::Message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Message::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Message = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     2, InitDefaultsMessage},
    {
        &protobuf_message_2eproto::scc_info_Head.base,
        &protobuf_message_2eproto::scc_info_Body.base,
    }};

static void InitDefaultsHead() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Head_default_instance_;
    new (ptr)::proto::Head();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Head::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Head = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsHead},
    {}};

static void InitDefaultsBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Body_default_instance_;
    new (ptr)::proto::Body();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Body::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<16> scc_info_Body = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     16, InitDefaultsBody},
    {
        &protobuf_message_2eproto::scc_info_ListenRequest.base,
        &protobuf_message_2eproto::scc_info_ListenResponse.base,
        &protobuf_message_2eproto::scc_info_Ping.base,
        &protobuf_message_2eproto::scc_info_Pong.base,
        &protobuf_message_2eproto::scc_info_LogoutRequest.base,
        &protobuf_message_2eproto::scc_info_LogoutResponse.base,
        &protobuf_message_2eproto::scc_info_NewConnectionRequest.base,
        &protobuf_message_2eproto::scc_info_NewConnectionResponse.base,
        &protobuf_message_2eproto::scc_info_CloseConnectionRequest.base,
        &protobuf_message_2eproto::scc_info_CloseConnectionResponse.base,
        &protobuf_message_2eproto::scc_info_DataRequest.base,
        &protobuf_message_2eproto::scc_info_DataResponse.base,
        &protobuf_message_2eproto::scc_info_PauseSendRequest.base,
        &protobuf_message_2eproto::scc_info_PauseSendResponse.base,
        &protobuf_message_2eproto::scc_info_ResumeSendRequest.base,
        &protobuf_message_2eproto::scc_info_ResumeSendResponse.base,
    }};

static void InitDefaultsResponseCode() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ResponseCode_default_instance_;
    new (ptr)::proto::ResponseCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ResponseCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResponseCode = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsResponseCode},
    {}};

static void InitDefaultsListenRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ListenRequest_default_instance_;
    new (ptr)::proto::ListenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ListenRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListenRequest = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsListenRequest},
    {}};

static void InitDefaultsListenResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ListenResponse_default_instance_;
    new (ptr)::proto::ListenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ListenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListenResponse = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsListenResponse},
    {
        &protobuf_message_2eproto::scc_info_ResponseCode.base,
    }};

static void InitDefaultsPing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Ping_default_instance_;
    new (ptr)::proto::Ping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Ping::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ping = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsPing},
    {}};

static void InitDefaultsPong() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Pong_default_instance_;
    new (ptr)::proto::Pong();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Pong::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Pong = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsPong},
    {
        &protobuf_message_2eproto::scc_info_ResponseCode.base,
    }};

static void InitDefaultsLogoutRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_LogoutRequest_default_instance_;
    new (ptr)::proto::LogoutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::LogoutRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogoutRequest = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsLogoutRequest},
    {}};

static void InitDefaultsLogoutResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_LogoutResponse_default_instance_;
    new (ptr)::proto::LogoutResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::LogoutResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LogoutResponse = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsLogoutResponse},
    {
        &protobuf_message_2eproto::scc_info_ResponseCode.base,
    }};

static void InitDefaultsNewConnectionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_NewConnectionRequest_default_instance_;
    new (ptr)::proto::NewConnectionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::NewConnectionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NewConnectionRequest = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsNewConnectionRequest},
    {}};

static void InitDefaultsNewConnectionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_NewConnectionResponse_default_instance_;
    new (ptr)::proto::NewConnectionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::NewConnectionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NewConnectionResponse = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsNewConnectionResponse},
    {
        &protobuf_message_2eproto::scc_info_ResponseCode.base,
    }};

static void InitDefaultsCloseConnectionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_CloseConnectionRequest_default_instance_;
    new (ptr)::proto::CloseConnectionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::CloseConnectionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CloseConnectionRequest = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsCloseConnectionRequest},
    {}};

static void InitDefaultsCloseConnectionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_CloseConnectionResponse_default_instance_;
    new (ptr)::proto::CloseConnectionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::CloseConnectionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CloseConnectionResponse = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsCloseConnectionResponse},
    {
        &protobuf_message_2eproto::scc_info_ResponseCode.base,
    }};

static void InitDefaultsDataRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_DataRequest_default_instance_;
    new (ptr)::proto::DataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::DataRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataRequest = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsDataRequest},
    {}};

static void InitDefaultsDataResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_DataResponse_default_instance_;
    new (ptr)::proto::DataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::DataResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataResponse = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsDataResponse},
    {
        &protobuf_message_2eproto::scc_info_ResponseCode.base,
    }};

static void InitDefaultsPauseSendRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_PauseSendRequest_default_instance_;
    new (ptr)::proto::PauseSendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::PauseSendRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PauseSendRequest = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsPauseSendRequest},
    {}};

static void InitDefaultsPauseSendResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_PauseSendResponse_default_instance_;
    new (ptr)::proto::PauseSendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::PauseSendResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PauseSendResponse = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsPauseSendResponse},
    {
        &protobuf_message_2eproto::scc_info_ResponseCode.base,
    }};

static void InitDefaultsResumeSendRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ResumeSendRequest_default_instance_;
    new (ptr)::proto::ResumeSendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ResumeSendRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResumeSendRequest = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsResumeSendRequest},
    {}};

static void InitDefaultsResumeSendResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ResumeSendResponse_default_instance_;
    new (ptr)::proto::ResumeSendResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ResumeSendResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResumeSendResponse = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsResumeSendResponse},
    {
        &protobuf_message_2eproto::scc_info_ResponseCode.base,
    }};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Message.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Head.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Body.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseCode.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListenRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListenResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ping.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pong.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogoutRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogoutResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NewConnectionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NewConnectionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloseConnectionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloseConnectionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PauseSendRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PauseSendResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResumeSendRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResumeSendResponse.base);
}

::google::protobuf::Metadata file_level_metadata[20];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32
    TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Message,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Message,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Message, head_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Message, body_),
        0,
        1,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Head,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Head,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Head, version_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Head,
                                                       random_num_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Head, flow_no_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Head,
                                                       message_type_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Head,
                                                       source_entity_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Head,
                                                       dest_entity_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Head,
                                                       call_purpose_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Head,
                                                       auth_key_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Head,
                                                       session_key_),
        2,
        3,
        4,
        5,
        6,
        7,
        0,
        1,
        8,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       listen_request_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       listen_response_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body, ping_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body, pong_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       logout_request_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       logout_response_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       new_connection_request_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::Body, new_connection_response_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::Body, close_connection_request_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::Body, close_connection_response_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       data_request_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       data_response_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       pause_send_request_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       pause_send_response_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       resume_send_request_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Body,
                                                       resume_send_response_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ResponseCode,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ResponseCode,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ResponseCode,
                                                       retcode_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ResponseCode,
                                                       error_message_),
        1,
        0,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ListenRequest,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ListenRequest,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ListenRequest,
                                                       self_ipv4_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ListenRequest,
                                                       self_ipv6_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ListenRequest,
                                                       self_port_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ListenRequest,
                                                       listen_port_),
        0,
        ~0u,
        1,
        2,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ListenResponse,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ListenResponse,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ListenResponse,
                                                       rc_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ListenResponse,
                                                       session_key_),
        0,
        1,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Ping,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Ping,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Ping, time_),
        0,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Pong,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Pong,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Pong, rc_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::Pong, time_),
        0,
        1,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LogoutRequest,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LogoutRequest,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LogoutResponse,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LogoutResponse,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LogoutResponse,
                                                       rc_),
        0,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::NewConnectionRequest, _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::NewConnectionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::NewConnectionRequest, ip_v4_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::NewConnectionRequest, ip_v6_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::NewConnectionRequest, port_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::NewConnectionRequest, conn_key_),
        0,
        ~0u,
        1,
        2,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::NewConnectionResponse, _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::NewConnectionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::NewConnectionResponse, rc_),
        0,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::CloseConnectionRequest, _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::CloseConnectionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::CloseConnectionRequest, conn_key_),
        0,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::CloseConnectionResponse, _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::CloseConnectionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::CloseConnectionResponse, rc_),
        0,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DataRequest,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DataRequest,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DataRequest,
                                                       conn_key_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DataRequest,
                                                       data_),
        0,
        ~0u,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DataResponse,
                                                       _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DataResponse,
                                                       _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DataResponse,
                                                       rc_),
        0,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::PauseSendRequest, _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::PauseSendRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::PauseSendRequest, conn_key_),
        0,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::PauseSendResponse, _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::PauseSendResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::PauseSendResponse, rc_),
        0,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::ResumeSendRequest, _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::ResumeSendRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::ResumeSendRequest, conn_key_),
        0,
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::ResumeSendResponse, _has_bits_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::ResumeSendResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::proto::ResumeSendResponse, rc_),
        0,
};
static const ::google::protobuf::internal::MigrationSchema
    schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 7, sizeof(::proto::Message)},
        {9, 23, sizeof(::proto::Head)},
        {32, 53, sizeof(::proto::Body)},
        {69, 76, sizeof(::proto::ResponseCode)},
        {78, 87, sizeof(::proto::ListenRequest)},
        {91, 98, sizeof(::proto::ListenResponse)},
        {100, 106, sizeof(::proto::Ping)},
        {107, 114, sizeof(::proto::Pong)},
        {116, 121, sizeof(::proto::LogoutRequest)},
        {121, 127, sizeof(::proto::LogoutResponse)},
        {128, 137, sizeof(::proto::NewConnectionRequest)},
        {141, 147, sizeof(::proto::NewConnectionResponse)},
        {148, 154, sizeof(::proto::CloseConnectionRequest)},
        {155, 161, sizeof(::proto::CloseConnectionResponse)},
        {162, 169, sizeof(::proto::DataRequest)},
        {171, 177, sizeof(::proto::DataResponse)},
        {178, 184, sizeof(::proto::PauseSendRequest)},
        {185, 191, sizeof(::proto::PauseSendResponse)},
        {192, 198, sizeof(::proto::ResumeSendRequest)},
        {199, 205, sizeof(::proto::ResumeSendResponse)},
};

static ::google::protobuf::Message const* const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_Message_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_Head_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_Body_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_ResponseCode_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_ListenRequest_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_ListenResponse_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_Ping_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_Pong_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_LogoutRequest_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_LogoutResponse_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_NewConnectionRequest_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_NewConnectionResponse_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_CloseConnectionRequest_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_CloseConnectionResponse_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_DataRequest_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_DataResponse_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_PauseSendRequest_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_PauseSendResponse_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_ResumeSendRequest_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(
        &::proto::_ResumeSendResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors("message.proto", schemas, file_default_instances,
                    TableStruct::offsets, file_level_metadata,
                    file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&)
    GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
      protodesc_cold) = {
      "\n\rmessage.proto\022\005proto\"\?\n\007Message\022\031\n\004hea"
      "d\030\001 \002(\0132\013.proto.Head\022\031\n\004body\030\002 "
      "\002(\0132\013.pro"
      "to.Body\"\273\001\n\004Head\022\017\n\007version\030\001 "
      "\002(\r\022\022\n\nran"
      "dom_num\030\002 \002(\r\022\017\n\007flow_no\030\003 "
      "\002(\r\022\024\n\014messag"
      "e_type\030\004 \002(\005\022\025\n\rsource_entity\030\005 "
      "\002(\r\022\023\n\013d"
      "est_entity\030\006 \001(\r\022\024\n\014call_purpose\030\007 "
      "\001(\t\022\020"
      "\n\010auth_key\030\010 \001(\t\022\023\n\013session_key\030\t "
      "\001(\004\"\252\006"
      "\n\004Body\022,\n\016listen_request\030\001 \001(\0132\024.proto.L"
      "istenRequest\022.\n\017listen_response\030\002 \001(\0132\025."
      "proto.ListenResponse\022\031\n\004ping\030\003 \001(\0132\013.pro"
      "to.Ping\022\031\n\004pong\030\004 \001(\0132\013.proto.Pong\022,\n\016lo"
      "gout_request\030\005 \001(\0132\024.proto.LogoutRequest"
      "\022.\n\017logout_response\030\006 \001(\0132\025.proto.Logout"
      "Response\022;\n\026new_connection_request\030\007 \001(\013"
      "2\033.proto.NewConnectionRequest\022=\n\027new_con"
      "nection_response\030\010 \001(\0132\034.proto.NewConnec"
      "tionResponse\022\?\n\030close_connection_request"
      "\030\t \001(\0132\035.proto.CloseConnectionRequest\022A\n"
      "\031close_connection_response\030\n \001(\0132\036.proto"
      ".CloseConnectionResponse\022(\n\014data_request"
      "\030\013 \001(\0132\022.proto.DataRequest\022*\n\rdata_respo"
      "nse\030\014 \001(\0132\023.proto.DataResponse\0223\n\022pause_"
      "send_request\030\r \001(\0132\027.proto.PauseSendRequ"
      "est\0225\n\023pause_send_response\030\016 \001(\0132\030.proto"
      ".PauseSendResponse\0225\n\023resume_send_reques"
      "t\030\017 \001(\0132\030.proto.ResumeSendRequest\0227\n\024res"
      "ume_send_response\030\020 \001(\0132\031.proto.ResumeSe"
      "ndResponse\"6\n\014ResponseCode\022\017\n\007retcode\030\001 "
      "\002(\005\022\025\n\rerror_message\030\002 \001(\t\"]\n\rListenRequ"
      "est\022\021\n\tself_ipv4\030\001 \001(\r\022\021\n\tself_ipv6\030\002 "
      "\003("
      "\014\022\021\n\tself_port\030\003 "
      "\002(\r\022\023\n\013listen_port\030\004 \002("
      "\r\"F\n\016ListenResponse\022\037\n\002rc\030\001 \002(\0132\023.proto."
      "ResponseCode\022\023\n\013session_key\030\002 \001(\004\"\024\n\004Pin"
      "g\022\014\n\004time\030\001 "
      "\002(\004\"5\n\004Pong\022\037\n\002rc\030\001 \002(\0132\023.pr"
      "oto.ResponseCode\022\014\n\004time\030\002 \002(\004\"\017\n\rLogout"
      "Request\"1\n\016LogoutResponse\022\037\n\002rc\030\001 \002(\0132\023."
      "proto.ResponseCode\"T\n\024NewConnectionReque"
      "st\022\r\n\005ip_v4\030\001 \001(\r\022\r\n\005ip_v6\030\002 "
      "\003(\014\022\014\n\004port"
      "\030\003 \002(\r\022\020\n\010conn_key\030\004 "
      "\002(\004\"8\n\025NewConnectio"
      "nResponse\022\037\n\002rc\030\001 \002(\0132\023.proto.ResponseCo"
      "de\"*\n\026CloseConnectionRequest\022\020\n\010conn_key"
      "\030\001 \002(\004\":\n\027CloseConnectionResponse\022\037\n\002rc\030"
      "\001 \002(\0132\023.proto.ResponseCode\"-\n\013DataReques"
      "t\022\020\n\010conn_key\030\001 \002(\004\022\014\n\004data\030\002 "
      "\003(\014\"/\n\014Dat"
      "aResponse\022\037\n\002rc\030\001 \002(\0132\023.proto.ResponseCo"
      "de\"$\n\020PauseSendRequest\022\020\n\010conn_key\030\001 \002(\004"
      "\"4\n\021PauseSendResponse\022\037\n\002rc\030\001 \002(\0132\023.prot"
      "o.ResponseCode\"%\n\021ResumeSendRequest\022\020\n\010c"
      "onn_key\030\001 \002(\004\"5\n\022ResumeSendResponse\022\037\n\002r"
      "c\030\001 \002(\0132\023.proto.ResponseCode*\361\002\n\013Message"
      "Type\022\022\n\016LISTEN_REQUEST\020\001\022\023\n\017LISTEN_RESPO"
      "NSE\020\002\022\010\n\004PING\020\003\022\010\n\004PONG\020\004\022\022"
      "\n\016LOGOUT_REQU"
      "EST\020\005\022\023\n\017LOGOUT_RESPONSE\020\006\022\032\n\026NEW_CONNEC"
      "TION_REQUEST\020\007\022\033\n\027NEW_CONNECTION_RESPONS"
      "E\020\010\022\034\n\030CLOSE_CONNECTION_REQUEST\020\t\022\034\n\030CLO"
      "SE_CONNECTION_RESONSE\020\n\022\020\n\014DATA_REQUEST\020"
      "\013\022\021\n\rDATA_RESPONSE\020\014\022\026\n\022PAUSE_SEND_REQUE"
      "ST\020\r\022\027\n\023PAUSE_SEND_RESPONSE\020\016\022\027\n\023RESUME_"
      "SEND_REQUEST\020\017\022\030\n\024RESUME_SEND_RESPONSE\020\020"};
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor,
                                                               2360);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
      "message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() { AddDescriptors(); }
} static_descriptor_initializer;
}  // namespace protobuf_message_2eproto
namespace proto {
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

// ===================================================================

void Message::InitAsDefaultInstance() {
  ::proto::_Message_default_instance_._instance.get_mutable()->head_ =
      const_cast<::proto::Head*>(::proto::Head::internal_default_instance());
  ::proto::_Message_default_instance_._instance.get_mutable()->body_ =
      const_cast<::proto::Body*>(::proto::Body::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kHeadFieldNumber;
const int Message::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Message.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Message)
}
Message::Message(const Message& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_head()) {
    head_ = new ::proto::Head(*from.head_);
  } else {
    head_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::proto::Body(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.Message)
}

void Message::SharedCtor() {
  ::memset(&head_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&body_) -
                               reinterpret_cast<char*>(&head_)) +
               sizeof(body_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:proto.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != internal_default_instance()) delete head_;
  if (this != internal_default_instance()) delete body_;
}

void Message::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* Message::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const Message& Message::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Message.base);
  return *internal_default_instance();
}

void Message::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(head_ != NULL);
      head_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(body_ != NULL);
      body_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Message)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.Head head = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .proto.Body body = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.Head head = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_head(), output);
  }

  // required .proto.Body body = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.Head head = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_head(), deterministic,
                                    target);
  }

  // required .proto.Body body = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(2, this->_internal_body(), deterministic,
                                    target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Message)
  return target;
}

size_t Message::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.Message)
  size_t total_size = 0;

  if (has_head()) {
    // required .proto.Head head = 1;
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*head_);
  }

  if (has_body()) {
    // required .proto.Body body = 2;
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*body_);
  }

  return total_size;
}
size_t Message::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.Message)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) ==
      0) {  // All required fields are present.
    // required .proto.Head head = 1;
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*head_);

    // required .proto.Body body = 2;
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*body_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_head()->::proto::Head::MergeFrom(from.head());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_body()->::proto::Body::MergeFrom(from.body());
    }
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_head()) {
    if (!this->head_->IsInitialized()) return false;
  }
  if (has_body()) {
    if (!this->body_->IsInitialized()) return false;
  }
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  using std::swap;
  swap(head_, other->head_);
  swap(body_, other->body_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void Head::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Head::kVersionFieldNumber;
const int Head::kRandomNumFieldNumber;
const int Head::kFlowNoFieldNumber;
const int Head::kMessageTypeFieldNumber;
const int Head::kSourceEntityFieldNumber;
const int Head::kDestEntityFieldNumber;
const int Head::kCallPurposeFieldNumber;
const int Head::kAuthKeyFieldNumber;
const int Head::kSessionKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Head::Head() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Head.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Head)
}
Head::Head(const Head& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  call_purpose_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_call_purpose()) {
    call_purpose_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.call_purpose_);
  }
  auth_key_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_auth_key()) {
    auth_key_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.auth_key_);
  }
  ::memcpy(&version_, &from.version_,
           static_cast<size_t>(reinterpret_cast<char*>(&session_key_) -
                               reinterpret_cast<char*>(&version_)) +
               sizeof(session_key_));
  // @@protoc_insertion_point(copy_constructor:proto.Head)
}

void Head::SharedCtor() {
  call_purpose_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_key_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&session_key_) -
                               reinterpret_cast<char*>(&version_)) +
               sizeof(session_key_));
}

Head::~Head() {
  // @@protoc_insertion_point(destructor:proto.Head)
  SharedDtor();
}

void Head::SharedDtor() {
  call_purpose_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_key_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Head::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* Head::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const Head& Head::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Head.base);
  return *internal_default_instance();
}

void Head::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.Head)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      call_purpose_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      auth_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&version_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&dest_entity_) -
                                 reinterpret_cast<char*>(&version_)) +
                 sizeof(dest_entity_));
  }
  session_key_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Head::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Head)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint32,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
              input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 random_num = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_random_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint32,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
              input, &random_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 flow_no = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_flow_no();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint32,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
              input, &flow_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 message_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_message_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int32,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
              input, &message_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 source_entity = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_source_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint32,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
              input, &source_entity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 dest_entity = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_dest_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint32,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
              input, &dest_entity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string call_purpose = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_call_purpose()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
              this->call_purpose().data(),
              static_cast<int>(this->call_purpose().length()),
              ::google::protobuf::internal::WireFormat::PARSE,
              "proto.Head.call_purpose");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string auth_key = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_auth_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
              this->auth_key().data(),
              static_cast<int>(this->auth_key().length()),
              ::google::protobuf::internal::WireFormat::PARSE,
              "proto.Head.auth_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 session_key = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_session_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &session_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Head)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Head)
  return false;
#undef DO_
}

void Head::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Head)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 version = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        1, this->version(), output);
  }

  // required uint32 random_num = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        2, this->random_num(), output);
  }

  // required uint32 flow_no = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        3, this->flow_no(), output);
  }

  // required int32 message_type = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
        4, this->message_type(), output);
  }

  // required uint32 source_entity = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        5, this->source_entity(), output);
  }

  // optional uint32 dest_entity = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        6, this->dest_entity(), output);
  }

  // optional string call_purpose = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->call_purpose().data(),
        static_cast<int>(this->call_purpose().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "proto.Head.call_purpose");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        7, this->call_purpose(), output);
  }

  // optional string auth_key = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->auth_key().data(), static_cast<int>(this->auth_key().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "proto.Head.auth_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        8, this->auth_key(), output);
  }

  // optional uint64 session_key = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        9, this->session_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Head)
}

::google::protobuf::uint8* Head::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Head)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 version = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        1, this->version(), target);
  }

  // required uint32 random_num = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        2, this->random_num(), target);
  }

  // required uint32 flow_no = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        3, this->flow_no(), target);
  }

  // required int32 message_type = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(
        4, this->message_type(), target);
  }

  // required uint32 source_entity = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        5, this->source_entity(), target);
  }

  // optional uint32 dest_entity = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        6, this->dest_entity(), target);
  }

  // optional string call_purpose = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->call_purpose().data(),
        static_cast<int>(this->call_purpose().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "proto.Head.call_purpose");
    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->call_purpose(), target);
  }

  // optional string auth_key = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->auth_key().data(), static_cast<int>(this->auth_key().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "proto.Head.auth_key");
    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->auth_key(), target);
  }

  // optional uint64 session_key = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        9, this->session_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Head)
  return target;
}

size_t Head::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.Head)
  size_t total_size = 0;

  if (has_version()) {
    // required uint32 version = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->version());
  }

  if (has_random_num()) {
    // required uint32 random_num = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->random_num());
  }

  if (has_flow_no()) {
    // required uint32 flow_no = 3;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->flow_no());
  }

  if (has_message_type()) {
    // required int32 message_type = 4;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                          this->message_type());
  }

  if (has_source_entity()) {
    // required uint32 source_entity = 5;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->source_entity());
  }

  return total_size;
}
size_t Head::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.Head)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007c) ^ 0x0000007c) ==
      0) {  // All required fields are present.
    // required uint32 version = 1;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->version());

    // required uint32 random_num = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->random_num());

    // required uint32 flow_no = 3;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->flow_no());

    // required int32 message_type = 4;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                          this->message_type());

    // required uint32 source_entity = 5;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->source_entity());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string call_purpose = 7;
    if (has_call_purpose()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                  this->call_purpose());
    }

    // optional string auth_key = 8;
    if (has_auth_key()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                  this->auth_key());
    }
  }
  // optional uint32 dest_entity = 6;
  if (has_dest_entity()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->dest_entity());
  }

  // optional uint64 session_key = 9;
  if (has_session_key()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->session_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Head::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.Head)
  GOOGLE_DCHECK_NE(&from, this);
  const Head* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Head>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Head)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Head)
    MergeFrom(*source);
  }
}

void Head::MergeFrom(const Head& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.Head)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_call_purpose();
      call_purpose_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.call_purpose_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_auth_key();
      auth_key_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.auth_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000008u) {
      random_num_ = from.random_num_;
    }
    if (cached_has_bits & 0x00000010u) {
      flow_no_ = from.flow_no_;
    }
    if (cached_has_bits & 0x00000020u) {
      message_type_ = from.message_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      source_entity_ = from.source_entity_;
    }
    if (cached_has_bits & 0x00000080u) {
      dest_entity_ = from.dest_entity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_session_key(from.session_key());
  }
}

void Head::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.Head)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Head::CopyFrom(const Head& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.Head)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Head::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007c) != 0x0000007c) return false;
  return true;
}

void Head::Swap(Head* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Head::InternalSwap(Head* other) {
  using std::swap;
  call_purpose_.Swap(
      &other->call_purpose_,
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  auth_key_.Swap(&other->auth_key_,
                 &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                 GetArenaNoVirtual());
  swap(version_, other->version_);
  swap(random_num_, other->random_num_);
  swap(flow_no_, other->flow_no_);
  swap(message_type_, other->message_type_);
  swap(source_entity_, other->source_entity_);
  swap(dest_entity_, other->dest_entity_);
  swap(session_key_, other->session_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Head::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void Body::InitAsDefaultInstance() {
  ::proto::_Body_default_instance_._instance.get_mutable()->listen_request_ =
      const_cast<::proto::ListenRequest*>(
          ::proto::ListenRequest::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()->listen_response_ =
      const_cast<::proto::ListenResponse*>(
          ::proto::ListenResponse::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()->ping_ =
      const_cast<::proto::Ping*>(::proto::Ping::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()->pong_ =
      const_cast<::proto::Pong*>(::proto::Pong::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()->logout_request_ =
      const_cast<::proto::LogoutRequest*>(
          ::proto::LogoutRequest::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()->logout_response_ =
      const_cast<::proto::LogoutResponse*>(
          ::proto::LogoutResponse::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()
      ->new_connection_request_ = const_cast<::proto::NewConnectionRequest*>(
      ::proto::NewConnectionRequest::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()
      ->new_connection_response_ = const_cast<::proto::NewConnectionResponse*>(
      ::proto::NewConnectionResponse::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()
      ->close_connection_request_ =
      const_cast<::proto::CloseConnectionRequest*>(
          ::proto::CloseConnectionRequest::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()
      ->close_connection_response_ =
      const_cast<::proto::CloseConnectionResponse*>(
          ::proto::CloseConnectionResponse::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()->data_request_ =
      const_cast<::proto::DataRequest*>(
          ::proto::DataRequest::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()->data_response_ =
      const_cast<::proto::DataResponse*>(
          ::proto::DataResponse::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()
      ->pause_send_request_ = const_cast<::proto::PauseSendRequest*>(
      ::proto::PauseSendRequest::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()
      ->pause_send_response_ = const_cast<::proto::PauseSendResponse*>(
      ::proto::PauseSendResponse::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()
      ->resume_send_request_ = const_cast<::proto::ResumeSendRequest*>(
      ::proto::ResumeSendRequest::internal_default_instance());
  ::proto::_Body_default_instance_._instance.get_mutable()
      ->resume_send_response_ = const_cast<::proto::ResumeSendResponse*>(
      ::proto::ResumeSendResponse::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Body::kListenRequestFieldNumber;
const int Body::kListenResponseFieldNumber;
const int Body::kPingFieldNumber;
const int Body::kPongFieldNumber;
const int Body::kLogoutRequestFieldNumber;
const int Body::kLogoutResponseFieldNumber;
const int Body::kNewConnectionRequestFieldNumber;
const int Body::kNewConnectionResponseFieldNumber;
const int Body::kCloseConnectionRequestFieldNumber;
const int Body::kCloseConnectionResponseFieldNumber;
const int Body::kDataRequestFieldNumber;
const int Body::kDataResponseFieldNumber;
const int Body::kPauseSendRequestFieldNumber;
const int Body::kPauseSendResponseFieldNumber;
const int Body::kResumeSendRequestFieldNumber;
const int Body::kResumeSendResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Body::Body() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Body.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Body)
}
Body::Body(const Body& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_listen_request()) {
    listen_request_ = new ::proto::ListenRequest(*from.listen_request_);
  } else {
    listen_request_ = NULL;
  }
  if (from.has_listen_response()) {
    listen_response_ = new ::proto::ListenResponse(*from.listen_response_);
  } else {
    listen_response_ = NULL;
  }
  if (from.has_ping()) {
    ping_ = new ::proto::Ping(*from.ping_);
  } else {
    ping_ = NULL;
  }
  if (from.has_pong()) {
    pong_ = new ::proto::Pong(*from.pong_);
  } else {
    pong_ = NULL;
  }
  if (from.has_logout_request()) {
    logout_request_ = new ::proto::LogoutRequest(*from.logout_request_);
  } else {
    logout_request_ = NULL;
  }
  if (from.has_logout_response()) {
    logout_response_ = new ::proto::LogoutResponse(*from.logout_response_);
  } else {
    logout_response_ = NULL;
  }
  if (from.has_new_connection_request()) {
    new_connection_request_ =
        new ::proto::NewConnectionRequest(*from.new_connection_request_);
  } else {
    new_connection_request_ = NULL;
  }
  if (from.has_new_connection_response()) {
    new_connection_response_ =
        new ::proto::NewConnectionResponse(*from.new_connection_response_);
  } else {
    new_connection_response_ = NULL;
  }
  if (from.has_close_connection_request()) {
    close_connection_request_ =
        new ::proto::CloseConnectionRequest(*from.close_connection_request_);
  } else {
    close_connection_request_ = NULL;
  }
  if (from.has_close_connection_response()) {
    close_connection_response_ =
        new ::proto::CloseConnectionResponse(*from.close_connection_response_);
  } else {
    close_connection_response_ = NULL;
  }
  if (from.has_data_request()) {
    data_request_ = new ::proto::DataRequest(*from.data_request_);
  } else {
    data_request_ = NULL;
  }
  if (from.has_data_response()) {
    data_response_ = new ::proto::DataResponse(*from.data_response_);
  } else {
    data_response_ = NULL;
  }
  if (from.has_pause_send_request()) {
    pause_send_request_ =
        new ::proto::PauseSendRequest(*from.pause_send_request_);
  } else {
    pause_send_request_ = NULL;
  }
  if (from.has_pause_send_response()) {
    pause_send_response_ =
        new ::proto::PauseSendResponse(*from.pause_send_response_);
  } else {
    pause_send_response_ = NULL;
  }
  if (from.has_resume_send_request()) {
    resume_send_request_ =
        new ::proto::ResumeSendRequest(*from.resume_send_request_);
  } else {
    resume_send_request_ = NULL;
  }
  if (from.has_resume_send_response()) {
    resume_send_response_ =
        new ::proto::ResumeSendResponse(*from.resume_send_response_);
  } else {
    resume_send_response_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.Body)
}

void Body::SharedCtor() {
  ::memset(&listen_request_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&resume_send_response_) -
                               reinterpret_cast<char*>(&listen_request_)) +
               sizeof(resume_send_response_));
}

Body::~Body() {
  // @@protoc_insertion_point(destructor:proto.Body)
  SharedDtor();
}

void Body::SharedDtor() {
  if (this != internal_default_instance()) delete listen_request_;
  if (this != internal_default_instance()) delete listen_response_;
  if (this != internal_default_instance()) delete ping_;
  if (this != internal_default_instance()) delete pong_;
  if (this != internal_default_instance()) delete logout_request_;
  if (this != internal_default_instance()) delete logout_response_;
  if (this != internal_default_instance()) delete new_connection_request_;
  if (this != internal_default_instance()) delete new_connection_response_;
  if (this != internal_default_instance()) delete close_connection_request_;
  if (this != internal_default_instance()) delete close_connection_response_;
  if (this != internal_default_instance()) delete data_request_;
  if (this != internal_default_instance()) delete data_response_;
  if (this != internal_default_instance()) delete pause_send_request_;
  if (this != internal_default_instance()) delete pause_send_response_;
  if (this != internal_default_instance()) delete resume_send_request_;
  if (this != internal_default_instance()) delete resume_send_response_;
}

void Body::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* Body::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const Body& Body::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Body.base);
  return *internal_default_instance();
}

void Body::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.Body)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(listen_request_ != NULL);
      listen_request_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(listen_response_ != NULL);
      listen_response_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(ping_ != NULL);
      ping_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(pong_ != NULL);
      pong_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(logout_request_ != NULL);
      logout_request_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(logout_response_ != NULL);
      logout_response_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(new_connection_request_ != NULL);
      new_connection_request_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(new_connection_response_ != NULL);
      new_connection_response_->Clear();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(close_connection_request_ != NULL);
      close_connection_request_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(close_connection_response_ != NULL);
      close_connection_response_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(data_request_ != NULL);
      data_request_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(data_response_ != NULL);
      data_response_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(pause_send_request_ != NULL);
      pause_send_request_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(pause_send_response_ != NULL);
      pause_send_response_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(resume_send_request_ != NULL);
      resume_send_request_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(resume_send_response_ != NULL);
      resume_send_response_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Body::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Body)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.ListenRequest listen_request = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_listen_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.ListenResponse listen_response = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_listen_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.Ping ping = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_ping()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.Pong pong = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_pong()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.LogoutRequest logout_request = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_logout_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.LogoutResponse logout_response = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_logout_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.NewConnectionRequest new_connection_request = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_new_connection_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.NewConnectionResponse new_connection_response = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_new_connection_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.CloseConnectionRequest close_connection_request = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_close_connection_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.CloseConnectionResponse close_connection_response = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_close_connection_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.DataRequest data_request = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_data_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.DataResponse data_response = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_data_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.PauseSendRequest pause_send_request = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_pause_send_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.PauseSendResponse pause_send_response = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_pause_send_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.ResumeSendRequest resume_send_request = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_resume_send_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.ResumeSendResponse resume_send_response = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_resume_send_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Body)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Body)
  return false;
#undef DO_
}

void Body::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Body)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.ListenRequest listen_request = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_listen_request(), output);
  }

  // optional .proto.ListenResponse listen_response = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_listen_response(), output);
  }

  // optional .proto.Ping ping = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_ping(), output);
  }

  // optional .proto.Pong pong = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, this->_internal_pong(), output);
  }

  // optional .proto.LogoutRequest logout_request = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, this->_internal_logout_request(), output);
  }

  // optional .proto.LogoutResponse logout_response = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, this->_internal_logout_response(), output);
  }

  // optional .proto.NewConnectionRequest new_connection_request = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        7, this->_internal_new_connection_request(), output);
  }

  // optional .proto.NewConnectionResponse new_connection_response = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        8, this->_internal_new_connection_response(), output);
  }

  // optional .proto.CloseConnectionRequest close_connection_request = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        9, this->_internal_close_connection_request(), output);
  }

  // optional .proto.CloseConnectionResponse close_connection_response = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        10, this->_internal_close_connection_response(), output);
  }

  // optional .proto.DataRequest data_request = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        11, this->_internal_data_request(), output);
  }

  // optional .proto.DataResponse data_response = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        12, this->_internal_data_response(), output);
  }

  // optional .proto.PauseSendRequest pause_send_request = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        13, this->_internal_pause_send_request(), output);
  }

  // optional .proto.PauseSendResponse pause_send_response = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        14, this->_internal_pause_send_response(), output);
  }

  // optional .proto.ResumeSendRequest resume_send_request = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        15, this->_internal_resume_send_request(), output);
  }

  // optional .proto.ResumeSendResponse resume_send_response = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        16, this->_internal_resume_send_response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Body)
}

::google::protobuf::uint8* Body::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Body)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.ListenRequest listen_request = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_listen_request(),
                                    deterministic, target);
  }

  // optional .proto.ListenResponse listen_response = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(2, this->_internal_listen_response(),
                                    deterministic, target);
  }

  // optional .proto.Ping ping = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(3, this->_internal_ping(), deterministic,
                                    target);
  }

  // optional .proto.Pong pong = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(4, this->_internal_pong(), deterministic,
                                    target);
  }

  // optional .proto.LogoutRequest logout_request = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(5, this->_internal_logout_request(),
                                    deterministic, target);
  }

  // optional .proto.LogoutResponse logout_response = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(6, this->_internal_logout_response(),
                                    deterministic, target);
  }

  // optional .proto.NewConnectionRequest new_connection_request = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(7, this->_internal_new_connection_request(),
                                    deterministic, target);
  }

  // optional .proto.NewConnectionResponse new_connection_response = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(8,
                                    this->_internal_new_connection_response(),
                                    deterministic, target);
  }

  // optional .proto.CloseConnectionRequest close_connection_request = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(9,
                                    this->_internal_close_connection_request(),
                                    deterministic, target);
  }

  // optional .proto.CloseConnectionResponse close_connection_response = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(10,
                                    this->_internal_close_connection_response(),
                                    deterministic, target);
  }

  // optional .proto.DataRequest data_request = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(11, this->_internal_data_request(),
                                    deterministic, target);
  }

  // optional .proto.DataResponse data_response = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(12, this->_internal_data_response(),
                                    deterministic, target);
  }

  // optional .proto.PauseSendRequest pause_send_request = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(13, this->_internal_pause_send_request(),
                                    deterministic, target);
  }

  // optional .proto.PauseSendResponse pause_send_response = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(14, this->_internal_pause_send_response(),
                                    deterministic, target);
  }

  // optional .proto.ResumeSendRequest resume_send_request = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(15, this->_internal_resume_send_request(),
                                    deterministic, target);
  }

  // optional .proto.ResumeSendResponse resume_send_response = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(16, this->_internal_resume_send_response(),
                                    deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Body)
  return target;
}

size_t Body::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.Body)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .proto.ListenRequest listen_request = 1;
    if (has_listen_request()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *listen_request_);
    }

    // optional .proto.ListenResponse listen_response = 2;
    if (has_listen_response()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *listen_response_);
    }

    // optional .proto.Ping ping = 3;
    if (has_ping()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*ping_);
    }

    // optional .proto.Pong pong = 4;
    if (has_pong()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*pong_);
    }

    // optional .proto.LogoutRequest logout_request = 5;
    if (has_logout_request()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *logout_request_);
    }

    // optional .proto.LogoutResponse logout_response = 6;
    if (has_logout_response()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *logout_response_);
    }

    // optional .proto.NewConnectionRequest new_connection_request = 7;
    if (has_new_connection_request()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *new_connection_request_);
    }

    // optional .proto.NewConnectionResponse new_connection_response = 8;
    if (has_new_connection_response()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *new_connection_response_);
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .proto.CloseConnectionRequest close_connection_request = 9;
    if (has_close_connection_request()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *close_connection_request_);
    }

    // optional .proto.CloseConnectionResponse close_connection_response = 10;
    if (has_close_connection_response()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *close_connection_response_);
    }

    // optional .proto.DataRequest data_request = 11;
    if (has_data_request()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *data_request_);
    }

    // optional .proto.DataResponse data_response = 12;
    if (has_data_response()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *data_response_);
    }

    // optional .proto.PauseSendRequest pause_send_request = 13;
    if (has_pause_send_request()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *pause_send_request_);
    }

    // optional .proto.PauseSendResponse pause_send_response = 14;
    if (has_pause_send_response()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *pause_send_response_);
    }

    // optional .proto.ResumeSendRequest resume_send_request = 15;
    if (has_resume_send_request()) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *resume_send_request_);
    }

    // optional .proto.ResumeSendResponse resume_send_response = 16;
    if (has_resume_send_response()) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(
                  *resume_send_response_);
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Body::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.Body)
  GOOGLE_DCHECK_NE(&from, this);
  const Body* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Body>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Body)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Body)
    MergeFrom(*source);
  }
}

void Body::MergeFrom(const Body& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.Body)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_listen_request()->::proto::ListenRequest::MergeFrom(
          from.listen_request());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_listen_response()->::proto::ListenResponse::MergeFrom(
          from.listen_response());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_ping()->::proto::Ping::MergeFrom(from.ping());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_pong()->::proto::Pong::MergeFrom(from.pong());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_logout_request()->::proto::LogoutRequest::MergeFrom(
          from.logout_request());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_logout_response()->::proto::LogoutResponse::MergeFrom(
          from.logout_response());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_new_connection_request()
          ->::proto::NewConnectionRequest::MergeFrom(
              from.new_connection_request());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_new_connection_response()
          ->::proto::NewConnectionResponse::MergeFrom(
              from.new_connection_response());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_close_connection_request()
          ->::proto::CloseConnectionRequest::MergeFrom(
              from.close_connection_request());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_close_connection_response()
          ->::proto::CloseConnectionResponse::MergeFrom(
              from.close_connection_response());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_data_request()->::proto::DataRequest::MergeFrom(
          from.data_request());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_data_response()->::proto::DataResponse::MergeFrom(
          from.data_response());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_pause_send_request()->::proto::PauseSendRequest::MergeFrom(
          from.pause_send_request());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_pause_send_response()->::proto::PauseSendResponse::MergeFrom(
          from.pause_send_response());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_resume_send_request()->::proto::ResumeSendRequest::MergeFrom(
          from.resume_send_request());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_resume_send_response()->::proto::ResumeSendResponse::MergeFrom(
          from.resume_send_response());
    }
  }
}

void Body::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.Body)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Body::CopyFrom(const Body& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.Body)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Body::IsInitialized() const {
  if (has_listen_request()) {
    if (!this->listen_request_->IsInitialized()) return false;
  }
  if (has_listen_response()) {
    if (!this->listen_response_->IsInitialized()) return false;
  }
  if (has_ping()) {
    if (!this->ping_->IsInitialized()) return false;
  }
  if (has_pong()) {
    if (!this->pong_->IsInitialized()) return false;
  }
  if (has_logout_response()) {
    if (!this->logout_response_->IsInitialized()) return false;
  }
  if (has_new_connection_request()) {
    if (!this->new_connection_request_->IsInitialized()) return false;
  }
  if (has_new_connection_response()) {
    if (!this->new_connection_response_->IsInitialized()) return false;
  }
  if (has_close_connection_request()) {
    if (!this->close_connection_request_->IsInitialized()) return false;
  }
  if (has_close_connection_response()) {
    if (!this->close_connection_response_->IsInitialized()) return false;
  }
  if (has_data_request()) {
    if (!this->data_request_->IsInitialized()) return false;
  }
  if (has_data_response()) {
    if (!this->data_response_->IsInitialized()) return false;
  }
  if (has_pause_send_request()) {
    if (!this->pause_send_request_->IsInitialized()) return false;
  }
  if (has_pause_send_response()) {
    if (!this->pause_send_response_->IsInitialized()) return false;
  }
  if (has_resume_send_request()) {
    if (!this->resume_send_request_->IsInitialized()) return false;
  }
  if (has_resume_send_response()) {
    if (!this->resume_send_response_->IsInitialized()) return false;
  }
  return true;
}

void Body::Swap(Body* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Body::InternalSwap(Body* other) {
  using std::swap;
  swap(listen_request_, other->listen_request_);
  swap(listen_response_, other->listen_response_);
  swap(ping_, other->ping_);
  swap(pong_, other->pong_);
  swap(logout_request_, other->logout_request_);
  swap(logout_response_, other->logout_response_);
  swap(new_connection_request_, other->new_connection_request_);
  swap(new_connection_response_, other->new_connection_response_);
  swap(close_connection_request_, other->close_connection_request_);
  swap(close_connection_response_, other->close_connection_response_);
  swap(data_request_, other->data_request_);
  swap(data_response_, other->data_response_);
  swap(pause_send_request_, other->pause_send_request_);
  swap(pause_send_response_, other->pause_send_response_);
  swap(resume_send_request_, other->resume_send_request_);
  swap(resume_send_response_, other->resume_send_response_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Body::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void ResponseCode::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseCode::kRetcodeFieldNumber;
const int ResponseCode::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseCode::ResponseCode()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ResponseCode.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResponseCode)
}
ResponseCode::ResponseCode(const ResponseCode& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_message()) {
    error_message_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.error_message_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ResponseCode)
}

void ResponseCode::SharedCtor() {
  error_message_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
}

ResponseCode::~ResponseCode() {
  // @@protoc_insertion_point(destructor:proto.ResponseCode)
  SharedDtor();
}

void ResponseCode::SharedDtor() {
  error_message_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseCode::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* ResponseCode::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const ResponseCode& ResponseCode::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ResponseCode.base);
  return *internal_default_instance();
}

void ResponseCode::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.ResponseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_message_.ClearNonDefaultToEmptyNoArena();
  }
  retcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResponseCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResponseCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 retcode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_retcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::int32,
               ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
              input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error_message = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_error_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
              this->error_message().data(),
              static_cast<int>(this->error_message().length()),
              ::google::protobuf::internal::WireFormat::PARSE,
              "proto.ResponseCode.error_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResponseCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResponseCode)
  return false;
#undef DO_
}

void ResponseCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResponseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 retcode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(),
                                                             output);
  }

  // optional string error_message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->error_message().data(),
        static_cast<int>(this->error_message().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "proto.ResponseCode.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        2, this->error_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResponseCode)
}

::google::protobuf::uint8*
ResponseCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResponseCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 retcode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(
        1, this->retcode(), target);
  }

  // optional string error_message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->error_message().data(),
        static_cast<int>(this->error_message().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "proto.ResponseCode.error_message");
    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResponseCode)
  return target;
}

size_t ResponseCode::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.ResponseCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required int32 retcode = 1;
  if (has_retcode()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                          this->retcode());
  }
  // optional string error_message = 2;
  if (has_error_message()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->error_message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseCode::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.ResponseCode)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseCode>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResponseCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResponseCode)
    MergeFrom(*source);
  }
}

void ResponseCode::MergeFrom(const ResponseCode& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ResponseCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error_message();
      error_message_.AssignWithDefault(
          &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          from.error_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResponseCode::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.ResponseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseCode::CopyFrom(const ResponseCode& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.ResponseCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseCode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void ResponseCode::Swap(ResponseCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseCode::InternalSwap(ResponseCode* other) {
  using std::swap;
  error_message_.Swap(
      &other->error_message_,
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  swap(retcode_, other->retcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResponseCode::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void ListenRequest::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListenRequest::kSelfIpv4FieldNumber;
const int ListenRequest::kSelfIpv6FieldNumber;
const int ListenRequest::kSelfPortFieldNumber;
const int ListenRequest::kListenPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListenRequest::ListenRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ListenRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ListenRequest)
}
ListenRequest::ListenRequest(const ListenRequest& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      self_ipv6_(from.self_ipv6_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&self_ipv4_, &from.self_ipv4_,
           static_cast<size_t>(reinterpret_cast<char*>(&listen_port_) -
                               reinterpret_cast<char*>(&self_ipv4_)) +
               sizeof(listen_port_));
  // @@protoc_insertion_point(copy_constructor:proto.ListenRequest)
}

void ListenRequest::SharedCtor() {
  ::memset(&self_ipv4_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&listen_port_) -
                               reinterpret_cast<char*>(&self_ipv4_)) +
               sizeof(listen_port_));
}

ListenRequest::~ListenRequest() {
  // @@protoc_insertion_point(destructor:proto.ListenRequest)
  SharedDtor();
}

void ListenRequest::SharedDtor() {}

void ListenRequest::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* ListenRequest::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const ListenRequest& ListenRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ListenRequest.base);
  return *internal_default_instance();
}

void ListenRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.ListenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  self_ipv6_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&self_ipv4_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&listen_port_) -
                                 reinterpret_cast<char*>(&self_ipv4_)) +
                 sizeof(listen_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ListenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ListenRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 self_ipv4 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_self_ipv4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint32,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
              input, &self_ipv4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes self_ipv6 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
              input, this->add_self_ipv6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 self_port = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_self_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint32,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
              input, &self_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 listen_port = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_listen_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint32,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
              input, &listen_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ListenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ListenRequest)
  return false;
#undef DO_
}

void ListenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ListenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 self_ipv4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        1, this->self_ipv4(), output);
  }

  // repeated bytes self_ipv6 = 2;
  for (int i = 0, n = this->self_ipv6_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
        2, this->self_ipv6(i), output);
  }

  // required uint32 self_port = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        3, this->self_port(), output);
  }

  // required uint32 listen_port = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        4, this->listen_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ListenRequest)
}

::google::protobuf::uint8*
ListenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ListenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 self_ipv4 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        1, this->self_ipv4(), target);
  }

  // repeated bytes self_ipv6 = 2;
  for (int i = 0, n = this->self_ipv6_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->self_ipv6(i), target);
  }

  // required uint32 self_port = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        3, this->self_port(), target);
  }

  // required uint32 listen_port = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        4, this->listen_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ListenRequest)
  return target;
}

size_t ListenRequest::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.ListenRequest)
  size_t total_size = 0;

  if (has_self_port()) {
    // required uint32 self_port = 3;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->self_port());
  }

  if (has_listen_port()) {
    // required uint32 listen_port = 4;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->listen_port());
  }

  return total_size;
}
size_t ListenRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.ListenRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) ==
      0) {  // All required fields are present.
    // required uint32 self_port = 3;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->self_port());

    // required uint32 listen_port = 4;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->listen_port());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated bytes self_ipv6 = 2;
  total_size +=
      1 * ::google::protobuf::internal::FromIntSize(this->self_ipv6_size());
  for (int i = 0, n = this->self_ipv6_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->self_ipv6(i));
  }

  // optional uint32 self_ipv4 = 1;
  if (has_self_ipv4()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->self_ipv4());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListenRequest::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.ListenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListenRequest>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ListenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ListenRequest)
    MergeFrom(*source);
  }
}

void ListenRequest::MergeFrom(const ListenRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ListenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  self_ipv6_.MergeFrom(from.self_ipv6_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      self_ipv4_ = from.self_ipv4_;
    }
    if (cached_has_bits & 0x00000002u) {
      self_port_ = from.self_port_;
    }
    if (cached_has_bits & 0x00000004u) {
      listen_port_ = from.listen_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ListenRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.ListenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListenRequest::CopyFrom(const ListenRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.ListenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListenRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void ListenRequest::Swap(ListenRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListenRequest::InternalSwap(ListenRequest* other) {
  using std::swap;
  self_ipv6_.InternalSwap(CastToBase(&other->self_ipv6_));
  swap(self_ipv4_, other->self_ipv4_);
  swap(self_port_, other->self_port_);
  swap(listen_port_, other->listen_port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListenRequest::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void ListenResponse::InitAsDefaultInstance() {
  ::proto::_ListenResponse_default_instance_._instance.get_mutable()->rc_ =
      const_cast<::proto::ResponseCode*>(
          ::proto::ResponseCode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListenResponse::kRcFieldNumber;
const int ListenResponse::kSessionKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListenResponse::ListenResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ListenResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ListenResponse)
}
ListenResponse::ListenResponse(const ListenResponse& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rc()) {
    rc_ = new ::proto::ResponseCode(*from.rc_);
  } else {
    rc_ = NULL;
  }
  session_key_ = from.session_key_;
  // @@protoc_insertion_point(copy_constructor:proto.ListenResponse)
}

void ListenResponse::SharedCtor() {
  ::memset(&rc_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&session_key_) -
                               reinterpret_cast<char*>(&rc_)) +
               sizeof(session_key_));
}

ListenResponse::~ListenResponse() {
  // @@protoc_insertion_point(destructor:proto.ListenResponse)
  SharedDtor();
}

void ListenResponse::SharedDtor() {
  if (this != internal_default_instance()) delete rc_;
}

void ListenResponse::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* ListenResponse::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const ListenResponse& ListenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ListenResponse.base);
  return *internal_default_instance();
}

void ListenResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.ListenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(rc_ != NULL);
    rc_->Clear();
  }
  session_key_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ListenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ListenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.ResponseCode rc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_rc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 session_key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_session_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &session_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ListenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ListenResponse)
  return false;
#undef DO_
}

void ListenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ListenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_rc(), output);
  }

  // optional uint64 session_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        2, this->session_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ListenResponse)
}

::google::protobuf::uint8*
ListenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ListenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_rc(), deterministic,
                                    target);
  }

  // optional uint64 session_key = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        2, this->session_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ListenResponse)
  return target;
}

size_t ListenResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.ListenResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required .proto.ResponseCode rc = 1;
  if (has_rc()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*rc_);
  }
  // optional uint64 session_key = 2;
  if (has_session_key()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->session_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListenResponse::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.ListenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const ListenResponse>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ListenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ListenResponse)
    MergeFrom(*source);
  }
}

void ListenResponse::MergeFrom(const ListenResponse& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ListenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_rc()->::proto::ResponseCode::MergeFrom(from.rc());
    }
    if (cached_has_bits & 0x00000002u) {
      session_key_ = from.session_key_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ListenResponse::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.ListenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListenResponse::CopyFrom(const ListenResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.ListenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListenResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_rc()) {
    if (!this->rc_->IsInitialized()) return false;
  }
  return true;
}

void ListenResponse::Swap(ListenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListenResponse::InternalSwap(ListenResponse* other) {
  using std::swap;
  swap(rc_, other->rc_);
  swap(session_key_, other->session_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListenResponse::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void Ping::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ping::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ping::Ping() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Ping.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Ping)
}
Ping::Ping(const Ping& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:proto.Ping)
}

void Ping::SharedCtor() { time_ = GOOGLE_ULONGLONG(0); }

Ping::~Ping() {
  // @@protoc_insertion_point(destructor:proto.Ping)
  SharedDtor();
}

void Ping::SharedDtor() {}

void Ping::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* Ping::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const Ping& Ping::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Ping.base);
  return *internal_default_instance();
}

void Ping::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  time_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Ping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 time = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Ping)
  return false;
#undef DO_
}

void Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->time(),
                                                              output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Ping)
}

::google::protobuf::uint8* Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        1, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Ping)
  return target;
}

size_t Ping::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.Ping)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required uint64 time = 1;
  if (has_time()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->time());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ping::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ping>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Ping)
    MergeFrom(*source);
  }
}

void Ping::MergeFrom(const Ping& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_time()) {
    set_time(from.time());
  }
}

void Ping::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ping::CopyFrom(const Ping& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ping::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Ping::Swap(Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ping::InternalSwap(Ping* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void Pong::InitAsDefaultInstance() {
  ::proto::_Pong_default_instance_._instance.get_mutable()->rc_ =
      const_cast<::proto::ResponseCode*>(
          ::proto::ResponseCode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pong::kRcFieldNumber;
const int Pong::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pong::Pong() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Pong.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Pong)
}
Pong::Pong(const Pong& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rc()) {
    rc_ = new ::proto::ResponseCode(*from.rc_);
  } else {
    rc_ = NULL;
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:proto.Pong)
}

void Pong::SharedCtor() {
  ::memset(&rc_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&time_) -
                               reinterpret_cast<char*>(&rc_)) +
               sizeof(time_));
}

Pong::~Pong() {
  // @@protoc_insertion_point(destructor:proto.Pong)
  SharedDtor();
}

void Pong::SharedDtor() {
  if (this != internal_default_instance()) delete rc_;
}

void Pong::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* Pong::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const Pong& Pong::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_Pong.base);
  return *internal_default_instance();
}

void Pong::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.Pong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(rc_ != NULL);
    rc_->Clear();
  }
  time_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Pong)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.ResponseCode rc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_rc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Pong)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Pong)
  return false;
#undef DO_
}

void Pong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Pong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_rc(), output);
  }

  // required uint64 time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->time(),
                                                              output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Pong)
}

::google::protobuf::uint8* Pong::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Pong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_rc(), deterministic,
                                    target);
  }

  // required uint64 time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Pong)
  return target;
}

size_t Pong::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.Pong)
  size_t total_size = 0;

  if (has_rc()) {
    // required .proto.ResponseCode rc = 1;
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*rc_);
  }

  if (has_time()) {
    // required uint64 time = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->time());
  }

  return total_size;
}
size_t Pong::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.Pong)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) ==
      0) {  // All required fields are present.
    // required .proto.ResponseCode rc = 1;
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*rc_);

    // required uint64 time = 2;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pong::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.Pong)
  GOOGLE_DCHECK_NE(&from, this);
  const Pong* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pong>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Pong)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Pong)
    MergeFrom(*source);
  }
}

void Pong::MergeFrom(const Pong& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.Pong)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_rc()->::proto::ResponseCode::MergeFrom(from.rc());
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Pong::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pong::CopyFrom(const Pong& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pong::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_rc()) {
    if (!this->rc_->IsInitialized()) return false;
  }
  return true;
}

void Pong::Swap(Pong* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pong::InternalSwap(Pong* other) {
  using std::swap;
  swap(rc_, other->rc_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pong::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void LogoutRequest::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutRequest::LogoutRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_LogoutRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LogoutRequest)
}
LogoutRequest::LogoutRequest(const LogoutRequest& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.LogoutRequest)
}

void LogoutRequest::SharedCtor() {}

LogoutRequest::~LogoutRequest() {
  // @@protoc_insertion_point(destructor:proto.LogoutRequest)
  SharedDtor();
}

void LogoutRequest::SharedDtor() {}

void LogoutRequest::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* LogoutRequest::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const LogoutRequest& LogoutRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_LogoutRequest.base);
  return *internal_default_instance();
}

void LogoutRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.LogoutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogoutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LogoutRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
        input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LogoutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LogoutRequest)
  return false;
#undef DO_
}

void LogoutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LogoutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LogoutRequest)
}

::google::protobuf::uint8*
LogoutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LogoutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LogoutRequest)
  return target;
}

size_t LogoutRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.LogoutRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogoutRequest::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.LogoutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutRequest>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LogoutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LogoutRequest)
    MergeFrom(*source);
  }
}

void LogoutRequest::MergeFrom(const LogoutRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.LogoutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;
}

void LogoutRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.LogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutRequest::CopyFrom(const LogoutRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.LogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutRequest::IsInitialized() const { return true; }

void LogoutRequest::Swap(LogoutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutRequest::InternalSwap(LogoutRequest* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogoutRequest::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void LogoutResponse::InitAsDefaultInstance() {
  ::proto::_LogoutResponse_default_instance_._instance.get_mutable()->rc_ =
      const_cast<::proto::ResponseCode*>(
          ::proto::ResponseCode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutResponse::kRcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutResponse::LogoutResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_LogoutResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LogoutResponse)
}
LogoutResponse::LogoutResponse(const LogoutResponse& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rc()) {
    rc_ = new ::proto::ResponseCode(*from.rc_);
  } else {
    rc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.LogoutResponse)
}

void LogoutResponse::SharedCtor() { rc_ = NULL; }

LogoutResponse::~LogoutResponse() {
  // @@protoc_insertion_point(destructor:proto.LogoutResponse)
  SharedDtor();
}

void LogoutResponse::SharedDtor() {
  if (this != internal_default_instance()) delete rc_;
}

void LogoutResponse::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* LogoutResponse::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const LogoutResponse& LogoutResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_LogoutResponse.base);
  return *internal_default_instance();
}

void LogoutResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.LogoutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(rc_ != NULL);
    rc_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogoutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LogoutResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.ResponseCode rc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_rc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LogoutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LogoutResponse)
  return false;
#undef DO_
}

void LogoutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LogoutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_rc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LogoutResponse)
}

::google::protobuf::uint8*
LogoutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LogoutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_rc(), deterministic,
                                    target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LogoutResponse)
  return target;
}

size_t LogoutResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.LogoutResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required .proto.ResponseCode rc = 1;
  if (has_rc()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*rc_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogoutResponse::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.LogoutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const LogoutResponse>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LogoutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LogoutResponse)
    MergeFrom(*source);
  }
}

void LogoutResponse::MergeFrom(const LogoutResponse& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.LogoutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_rc()) {
    mutable_rc()->::proto::ResponseCode::MergeFrom(from.rc());
  }
}

void LogoutResponse::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.LogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutResponse::CopyFrom(const LogoutResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.LogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_rc()) {
    if (!this->rc_->IsInitialized()) return false;
  }
  return true;
}

void LogoutResponse::Swap(LogoutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutResponse::InternalSwap(LogoutResponse* other) {
  using std::swap;
  swap(rc_, other->rc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogoutResponse::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void NewConnectionRequest::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewConnectionRequest::kIpV4FieldNumber;
const int NewConnectionRequest::kIpV6FieldNumber;
const int NewConnectionRequest::kPortFieldNumber;
const int NewConnectionRequest::kConnKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewConnectionRequest::NewConnectionRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_NewConnectionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.NewConnectionRequest)
}
NewConnectionRequest::NewConnectionRequest(const NewConnectionRequest& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      ip_v6_(from.ip_v6_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ip_v4_, &from.ip_v4_,
           static_cast<size_t>(reinterpret_cast<char*>(&conn_key_) -
                               reinterpret_cast<char*>(&ip_v4_)) +
               sizeof(conn_key_));
  // @@protoc_insertion_point(copy_constructor:proto.NewConnectionRequest)
}

void NewConnectionRequest::SharedCtor() {
  ::memset(&ip_v4_, 0,
           static_cast<size_t>(reinterpret_cast<char*>(&conn_key_) -
                               reinterpret_cast<char*>(&ip_v4_)) +
               sizeof(conn_key_));
}

NewConnectionRequest::~NewConnectionRequest() {
  // @@protoc_insertion_point(destructor:proto.NewConnectionRequest)
  SharedDtor();
}

void NewConnectionRequest::SharedDtor() {}

void NewConnectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NewConnectionRequest::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const NewConnectionRequest& NewConnectionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_NewConnectionRequest.base);
  return *internal_default_instance();
}

void NewConnectionRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.NewConnectionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ip_v6_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&ip_v4_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&conn_key_) -
                                 reinterpret_cast<char*>(&ip_v4_)) +
                 sizeof(conn_key_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewConnectionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.NewConnectionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ip_v4 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ip_v4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint32,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
              input, &ip_v4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes ip_v6 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
              input, this->add_ip_v6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 port = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint32,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
              input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 conn_key = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_conn_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &conn_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.NewConnectionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.NewConnectionRequest)
  return false;
#undef DO_
}

void NewConnectionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.NewConnectionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ip_v4 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ip_v4(),
                                                              output);
  }

  // repeated bytes ip_v6 = 2;
  for (int i = 0, n = this->ip_v6_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(2, this->ip_v6(i),
                                                             output);
  }

  // required uint32 port = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(),
                                                              output);
  }

  // required uint64 conn_key = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        4, this->conn_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.NewConnectionRequest)
}

::google::protobuf::uint8*
NewConnectionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.NewConnectionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ip_v4 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        1, this->ip_v4(), target);
  }

  // repeated bytes ip_v6 = 2;
  for (int i = 0, n = this->ip_v6_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip_v6(i), target);
  }

  // required uint32 port = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        3, this->port(), target);
  }

  // required uint64 conn_key = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        4, this->conn_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NewConnectionRequest)
  return target;
}

size_t NewConnectionRequest::RequiredFieldsByteSizeFallback() const {
  // @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.NewConnectionRequest)
  size_t total_size = 0;

  if (has_port()) {
    // required uint32 port = 3;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->port());
  }

  if (has_conn_key()) {
    // required uint64 conn_key = 4;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->conn_key());
  }

  return total_size;
}
size_t NewConnectionRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.NewConnectionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) ==
      0) {  // All required fields are present.
    // required uint32 port = 3;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->port());

    // required uint64 conn_key = 4;
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->conn_key());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated bytes ip_v6 = 2;
  total_size +=
      1 * ::google::protobuf::internal::FromIntSize(this->ip_v6_size());
  for (int i = 0, n = this->ip_v6_size(); i < n; i++) {
    total_size +=
        ::google::protobuf::internal::WireFormatLite::BytesSize(this->ip_v6(i));
  }

  // optional uint32 ip_v4 = 1;
  if (has_ip_v4()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->ip_v4());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewConnectionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.NewConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NewConnectionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const NewConnectionRequest>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.NewConnectionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.NewConnectionRequest)
    MergeFrom(*source);
  }
}

void NewConnectionRequest::MergeFrom(const NewConnectionRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.NewConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  ip_v6_.MergeFrom(from.ip_v6_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      ip_v4_ = from.ip_v4_;
    }
    if (cached_has_bits & 0x00000002u) {
      port_ = from.port_;
    }
    if (cached_has_bits & 0x00000004u) {
      conn_key_ = from.conn_key_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NewConnectionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.NewConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewConnectionRequest::CopyFrom(const NewConnectionRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.NewConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewConnectionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void NewConnectionRequest::Swap(NewConnectionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewConnectionRequest::InternalSwap(NewConnectionRequest* other) {
  using std::swap;
  ip_v6_.InternalSwap(CastToBase(&other->ip_v6_));
  swap(ip_v4_, other->ip_v4_);
  swap(port_, other->port_);
  swap(conn_key_, other->conn_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NewConnectionRequest::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void NewConnectionResponse::InitAsDefaultInstance() {
  ::proto::_NewConnectionResponse_default_instance_._instance.get_mutable()
      ->rc_ = const_cast<::proto::ResponseCode*>(
      ::proto::ResponseCode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewConnectionResponse::kRcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewConnectionResponse::NewConnectionResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_NewConnectionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.NewConnectionResponse)
}
NewConnectionResponse::NewConnectionResponse(const NewConnectionResponse& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rc()) {
    rc_ = new ::proto::ResponseCode(*from.rc_);
  } else {
    rc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.NewConnectionResponse)
}

void NewConnectionResponse::SharedCtor() { rc_ = NULL; }

NewConnectionResponse::~NewConnectionResponse() {
  // @@protoc_insertion_point(destructor:proto.NewConnectionResponse)
  SharedDtor();
}

void NewConnectionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete rc_;
}

void NewConnectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NewConnectionResponse::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const NewConnectionResponse& NewConnectionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_NewConnectionResponse.base);
  return *internal_default_instance();
}

void NewConnectionResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.NewConnectionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(rc_ != NULL);
    rc_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewConnectionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.NewConnectionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.ResponseCode rc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_rc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.NewConnectionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.NewConnectionResponse)
  return false;
#undef DO_
}

void NewConnectionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.NewConnectionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_rc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.NewConnectionResponse)
}

::google::protobuf::uint8*
NewConnectionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.NewConnectionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_rc(), deterministic,
                                    target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NewConnectionResponse)
  return target;
}

size_t NewConnectionResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.NewConnectionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required .proto.ResponseCode rc = 1;
  if (has_rc()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*rc_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewConnectionResponse::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.NewConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NewConnectionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const NewConnectionResponse>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.NewConnectionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.NewConnectionResponse)
    MergeFrom(*source);
  }
}

void NewConnectionResponse::MergeFrom(const NewConnectionResponse& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.NewConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_rc()) {
    mutable_rc()->::proto::ResponseCode::MergeFrom(from.rc());
  }
}

void NewConnectionResponse::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.NewConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewConnectionResponse::CopyFrom(const NewConnectionResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.NewConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewConnectionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_rc()) {
    if (!this->rc_->IsInitialized()) return false;
  }
  return true;
}

void NewConnectionResponse::Swap(NewConnectionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewConnectionResponse::InternalSwap(NewConnectionResponse* other) {
  using std::swap;
  swap(rc_, other->rc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NewConnectionResponse::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void CloseConnectionRequest::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseConnectionRequest::kConnKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseConnectionRequest::CloseConnectionRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_CloseConnectionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CloseConnectionRequest)
}
CloseConnectionRequest::CloseConnectionRequest(
    const CloseConnectionRequest& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conn_key_ = from.conn_key_;
  // @@protoc_insertion_point(copy_constructor:proto.CloseConnectionRequest)
}

void CloseConnectionRequest::SharedCtor() { conn_key_ = GOOGLE_ULONGLONG(0); }

CloseConnectionRequest::~CloseConnectionRequest() {
  // @@protoc_insertion_point(destructor:proto.CloseConnectionRequest)
  SharedDtor();
}

void CloseConnectionRequest::SharedDtor() {}

void CloseConnectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloseConnectionRequest::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const CloseConnectionRequest& CloseConnectionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_CloseConnectionRequest.base);
  return *internal_default_instance();
}

void CloseConnectionRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.CloseConnectionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  conn_key_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseConnectionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CloseConnectionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 conn_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_conn_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &conn_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CloseConnectionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CloseConnectionRequest)
  return false;
#undef DO_
}

void CloseConnectionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CloseConnectionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 conn_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        1, this->conn_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CloseConnectionRequest)
}

::google::protobuf::uint8*
CloseConnectionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CloseConnectionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 conn_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        1, this->conn_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CloseConnectionRequest)
  return target;
}

size_t CloseConnectionRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.CloseConnectionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required uint64 conn_key = 1;
  if (has_conn_key()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->conn_key());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseConnectionRequest::MergeFrom(
    const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.CloseConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseConnectionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const CloseConnectionRequest>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CloseConnectionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CloseConnectionRequest)
    MergeFrom(*source);
  }
}

void CloseConnectionRequest::MergeFrom(const CloseConnectionRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CloseConnectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_conn_key()) {
    set_conn_key(from.conn_key());
  }
}

void CloseConnectionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.CloseConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseConnectionRequest::CopyFrom(const CloseConnectionRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.CloseConnectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseConnectionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CloseConnectionRequest::Swap(CloseConnectionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseConnectionRequest::InternalSwap(CloseConnectionRequest* other) {
  using std::swap;
  swap(conn_key_, other->conn_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloseConnectionRequest::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void CloseConnectionResponse::InitAsDefaultInstance() {
  ::proto::_CloseConnectionResponse_default_instance_._instance.get_mutable()
      ->rc_ = const_cast<::proto::ResponseCode*>(
      ::proto::ResponseCode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseConnectionResponse::kRcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseConnectionResponse::CloseConnectionResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_CloseConnectionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CloseConnectionResponse)
}
CloseConnectionResponse::CloseConnectionResponse(
    const CloseConnectionResponse& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rc()) {
    rc_ = new ::proto::ResponseCode(*from.rc_);
  } else {
    rc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.CloseConnectionResponse)
}

void CloseConnectionResponse::SharedCtor() { rc_ = NULL; }

CloseConnectionResponse::~CloseConnectionResponse() {
  // @@protoc_insertion_point(destructor:proto.CloseConnectionResponse)
  SharedDtor();
}

void CloseConnectionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete rc_;
}

void CloseConnectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloseConnectionResponse::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const CloseConnectionResponse& CloseConnectionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_CloseConnectionResponse.base);
  return *internal_default_instance();
}

void CloseConnectionResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.CloseConnectionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(rc_ != NULL);
    rc_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CloseConnectionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CloseConnectionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.ResponseCode rc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_rc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CloseConnectionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CloseConnectionResponse)
  return false;
#undef DO_
}

void CloseConnectionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CloseConnectionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_rc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CloseConnectionResponse)
}

::google::protobuf::uint8*
CloseConnectionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CloseConnectionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_rc(), deterministic,
                                    target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CloseConnectionResponse)
  return target;
}

size_t CloseConnectionResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.CloseConnectionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required .proto.ResponseCode rc = 1;
  if (has_rc()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*rc_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseConnectionResponse::MergeFrom(
    const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.CloseConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseConnectionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const CloseConnectionResponse>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CloseConnectionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CloseConnectionResponse)
    MergeFrom(*source);
  }
}

void CloseConnectionResponse::MergeFrom(const CloseConnectionResponse& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CloseConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_rc()) {
    mutable_rc()->::proto::ResponseCode::MergeFrom(from.rc());
  }
}

void CloseConnectionResponse::CopyFrom(
    const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.CloseConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseConnectionResponse::CopyFrom(const CloseConnectionResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.CloseConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseConnectionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_rc()) {
    if (!this->rc_->IsInitialized()) return false;
  }
  return true;
}

void CloseConnectionResponse::Swap(CloseConnectionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseConnectionResponse::InternalSwap(CloseConnectionResponse* other) {
  using std::swap;
  swap(rc_, other->rc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloseConnectionResponse::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void DataRequest::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRequest::kConnKeyFieldNumber;
const int DataRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRequest::DataRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_DataRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DataRequest)
}
DataRequest::DataRequest(const DataRequest& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conn_key_ = from.conn_key_;
  // @@protoc_insertion_point(copy_constructor:proto.DataRequest)
}

void DataRequest::SharedCtor() { conn_key_ = GOOGLE_ULONGLONG(0); }

DataRequest::~DataRequest() {
  // @@protoc_insertion_point(destructor:proto.DataRequest)
  SharedDtor();
}

void DataRequest::SharedDtor() {}

void DataRequest::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* DataRequest::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const DataRequest& DataRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_DataRequest.base);
  return *internal_default_instance();
}

void DataRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  data_.Clear();
  conn_key_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DataRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 conn_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_conn_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &conn_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
              input, this->add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DataRequest)
  return false;
#undef DO_
}

void DataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 conn_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        1, this->conn_key(), output);
  }

  // repeated bytes data = 2;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(2, this->data(i),
                                                             output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DataRequest)
}

::google::protobuf::uint8* DataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 conn_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        1, this->conn_key(), target);
  }

  // repeated bytes data = 2;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DataRequest)
  return target;
}

size_t DataRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.DataRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required uint64 conn_key = 1;
  if (has_conn_key()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->conn_key());
  }
  // repeated bytes data = 2;
  total_size +=
      1 * ::google::protobuf::internal::FromIntSize(this->data_size());
  for (int i = 0, n = this->data_size(); i < n; i++) {
    total_size +=
        ::google::protobuf::internal::WireFormatLite::BytesSize(this->data(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataRequest::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.DataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRequest>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DataRequest)
    MergeFrom(*source);
  }
}

void DataRequest::MergeFrom(const DataRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.has_conn_key()) {
    set_conn_key(from.conn_key());
  }
}

void DataRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRequest::CopyFrom(const DataRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void DataRequest::Swap(DataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRequest::InternalSwap(DataRequest* other) {
  using std::swap;
  data_.InternalSwap(CastToBase(&other->data_));
  swap(conn_key_, other->conn_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataRequest::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void DataResponse::InitAsDefaultInstance() {
  ::proto::_DataResponse_default_instance_._instance.get_mutable()->rc_ =
      const_cast<::proto::ResponseCode*>(
          ::proto::ResponseCode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataResponse::kRcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataResponse::DataResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_DataResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DataResponse)
}
DataResponse::DataResponse(const DataResponse& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rc()) {
    rc_ = new ::proto::ResponseCode(*from.rc_);
  } else {
    rc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.DataResponse)
}

void DataResponse::SharedCtor() { rc_ = NULL; }

DataResponse::~DataResponse() {
  // @@protoc_insertion_point(destructor:proto.DataResponse)
  SharedDtor();
}

void DataResponse::SharedDtor() {
  if (this != internal_default_instance()) delete rc_;
}

void DataResponse::SetCachedSize(int size) const { _cached_size_.Set(size); }
const ::google::protobuf::Descriptor* DataResponse::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const DataResponse& DataResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_DataResponse.base);
  return *internal_default_instance();
}

void DataResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.DataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(rc_ != NULL);
    rc_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DataResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.ResponseCode rc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_rc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DataResponse)
  return false;
#undef DO_
}

void DataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_rc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DataResponse)
}

::google::protobuf::uint8*
DataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_rc(), deterministic,
                                    target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DataResponse)
  return target;
}

size_t DataResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.DataResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required .proto.ResponseCode rc = 1;
  if (has_rc()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*rc_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataResponse::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.DataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataResponse>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DataResponse)
    MergeFrom(*source);
  }
}

void DataResponse::MergeFrom(const DataResponse& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_rc()) {
    mutable_rc()->::proto::ResponseCode::MergeFrom(from.rc());
  }
}

void DataResponse::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.DataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataResponse::CopyFrom(const DataResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.DataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_rc()) {
    if (!this->rc_->IsInitialized()) return false;
  }
  return true;
}

void DataResponse::Swap(DataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataResponse::InternalSwap(DataResponse* other) {
  using std::swap;
  swap(rc_, other->rc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataResponse::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void PauseSendRequest::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PauseSendRequest::kConnKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PauseSendRequest::PauseSendRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_PauseSendRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PauseSendRequest)
}
PauseSendRequest::PauseSendRequest(const PauseSendRequest& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conn_key_ = from.conn_key_;
  // @@protoc_insertion_point(copy_constructor:proto.PauseSendRequest)
}

void PauseSendRequest::SharedCtor() { conn_key_ = GOOGLE_ULONGLONG(0); }

PauseSendRequest::~PauseSendRequest() {
  // @@protoc_insertion_point(destructor:proto.PauseSendRequest)
  SharedDtor();
}

void PauseSendRequest::SharedDtor() {}

void PauseSendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PauseSendRequest::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const PauseSendRequest& PauseSendRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_PauseSendRequest.base);
  return *internal_default_instance();
}

void PauseSendRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.PauseSendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  conn_key_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PauseSendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PauseSendRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 conn_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_conn_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &conn_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PauseSendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PauseSendRequest)
  return false;
#undef DO_
}

void PauseSendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PauseSendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 conn_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        1, this->conn_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PauseSendRequest)
}

::google::protobuf::uint8*
PauseSendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PauseSendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 conn_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        1, this->conn_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PauseSendRequest)
  return target;
}

size_t PauseSendRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.PauseSendRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required uint64 conn_key = 1;
  if (has_conn_key()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->conn_key());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PauseSendRequest::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.PauseSendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PauseSendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const PauseSendRequest>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PauseSendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PauseSendRequest)
    MergeFrom(*source);
  }
}

void PauseSendRequest::MergeFrom(const PauseSendRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.PauseSendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_conn_key()) {
    set_conn_key(from.conn_key());
  }
}

void PauseSendRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.PauseSendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseSendRequest::CopyFrom(const PauseSendRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.PauseSendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseSendRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void PauseSendRequest::Swap(PauseSendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PauseSendRequest::InternalSwap(PauseSendRequest* other) {
  using std::swap;
  swap(conn_key_, other->conn_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PauseSendRequest::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void PauseSendResponse::InitAsDefaultInstance() {
  ::proto::_PauseSendResponse_default_instance_._instance.get_mutable()->rc_ =
      const_cast<::proto::ResponseCode*>(
          ::proto::ResponseCode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PauseSendResponse::kRcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PauseSendResponse::PauseSendResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_PauseSendResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PauseSendResponse)
}
PauseSendResponse::PauseSendResponse(const PauseSendResponse& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rc()) {
    rc_ = new ::proto::ResponseCode(*from.rc_);
  } else {
    rc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.PauseSendResponse)
}

void PauseSendResponse::SharedCtor() { rc_ = NULL; }

PauseSendResponse::~PauseSendResponse() {
  // @@protoc_insertion_point(destructor:proto.PauseSendResponse)
  SharedDtor();
}

void PauseSendResponse::SharedDtor() {
  if (this != internal_default_instance()) delete rc_;
}

void PauseSendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PauseSendResponse::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const PauseSendResponse& PauseSendResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_PauseSendResponse.base);
  return *internal_default_instance();
}

void PauseSendResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.PauseSendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(rc_ != NULL);
    rc_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PauseSendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PauseSendResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.ResponseCode rc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_rc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PauseSendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PauseSendResponse)
  return false;
#undef DO_
}

void PauseSendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PauseSendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_rc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PauseSendResponse)
}

::google::protobuf::uint8*
PauseSendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PauseSendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_rc(), deterministic,
                                    target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PauseSendResponse)
  return target;
}

size_t PauseSendResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.PauseSendResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required .proto.ResponseCode rc = 1;
  if (has_rc()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*rc_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PauseSendResponse::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.PauseSendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PauseSendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const PauseSendResponse>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PauseSendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PauseSendResponse)
    MergeFrom(*source);
  }
}

void PauseSendResponse::MergeFrom(const PauseSendResponse& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.PauseSendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_rc()) {
    mutable_rc()->::proto::ResponseCode::MergeFrom(from.rc());
  }
}

void PauseSendResponse::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.PauseSendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseSendResponse::CopyFrom(const PauseSendResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.PauseSendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseSendResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_rc()) {
    if (!this->rc_->IsInitialized()) return false;
  }
  return true;
}

void PauseSendResponse::Swap(PauseSendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PauseSendResponse::InternalSwap(PauseSendResponse* other) {
  using std::swap;
  swap(rc_, other->rc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PauseSendResponse::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void ResumeSendRequest::InitAsDefaultInstance() {}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResumeSendRequest::kConnKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResumeSendRequest::ResumeSendRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ResumeSendRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResumeSendRequest)
}
ResumeSendRequest::ResumeSendRequest(const ResumeSendRequest& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conn_key_ = from.conn_key_;
  // @@protoc_insertion_point(copy_constructor:proto.ResumeSendRequest)
}

void ResumeSendRequest::SharedCtor() { conn_key_ = GOOGLE_ULONGLONG(0); }

ResumeSendRequest::~ResumeSendRequest() {
  // @@protoc_insertion_point(destructor:proto.ResumeSendRequest)
  SharedDtor();
}

void ResumeSendRequest::SharedDtor() {}

void ResumeSendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResumeSendRequest::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const ResumeSendRequest& ResumeSendRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ResumeSendRequest.base);
  return *internal_default_instance();
}

void ResumeSendRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.ResumeSendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  conn_key_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResumeSendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResumeSendRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 conn_key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_conn_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
               ::google::protobuf::uint64,
               ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
              input, &conn_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResumeSendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResumeSendRequest)
  return false;
#undef DO_
}

void ResumeSendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResumeSendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 conn_key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        1, this->conn_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResumeSendRequest)
}

::google::protobuf::uint8*
ResumeSendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResumeSendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 conn_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        1, this->conn_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResumeSendRequest)
  return target;
}

size_t ResumeSendRequest::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.ResumeSendRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required uint64 conn_key = 1;
  if (has_conn_key()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->conn_key());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResumeSendRequest::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.ResumeSendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResumeSendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const ResumeSendRequest>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResumeSendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResumeSendRequest)
    MergeFrom(*source);
  }
}

void ResumeSendRequest::MergeFrom(const ResumeSendRequest& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ResumeSendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_conn_key()) {
    set_conn_key(from.conn_key());
  }
}

void ResumeSendRequest::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.ResumeSendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResumeSendRequest::CopyFrom(const ResumeSendRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.ResumeSendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResumeSendRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ResumeSendRequest::Swap(ResumeSendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResumeSendRequest::InternalSwap(ResumeSendRequest* other) {
  using std::swap;
  swap(conn_key_, other->conn_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResumeSendRequest::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void ResumeSendResponse::InitAsDefaultInstance() {
  ::proto::_ResumeSendResponse_default_instance_._instance.get_mutable()->rc_ =
      const_cast<::proto::ResponseCode*>(
          ::proto::ResponseCode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResumeSendResponse::kRcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResumeSendResponse::ResumeSendResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ResumeSendResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResumeSendResponse)
}
ResumeSendResponse::ResumeSendResponse(const ResumeSendResponse& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rc()) {
    rc_ = new ::proto::ResponseCode(*from.rc_);
  } else {
    rc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ResumeSendResponse)
}

void ResumeSendResponse::SharedCtor() { rc_ = NULL; }

ResumeSendResponse::~ResumeSendResponse() {
  // @@protoc_insertion_point(destructor:proto.ResumeSendResponse)
  SharedDtor();
}

void ResumeSendResponse::SharedDtor() {
  if (this != internal_default_instance()) delete rc_;
}

void ResumeSendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResumeSendResponse::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const ResumeSendResponse& ResumeSendResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(
      &protobuf_message_2eproto::scc_info_ResumeSendResponse.base);
  return *internal_default_instance();
}

void ResumeSendResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:proto.ResumeSendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(rc_ != NULL);
    rc_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResumeSendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResumeSendResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.ResponseCode rc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
              input, mutable_rc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
            input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResumeSendResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResumeSendResponse)
  return false;
#undef DO_
}

void ResumeSendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResumeSendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_rc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResumeSendResponse)
}

::google::protobuf::uint8*
ResumeSendResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResumeSendResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.ResponseCode rc = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_rc(), deterministic,
                                    target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResumeSendResponse)
  return target;
}

size_t ResumeSendResponse::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:proto.ResumeSendResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            _internal_metadata_.unknown_fields());
  }
  // required .proto.ResponseCode rc = 1;
  if (has_rc()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*rc_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResumeSendResponse::MergeFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_merge_from_start:proto.ResumeSendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResumeSendResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const ResumeSendResponse>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResumeSendResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResumeSendResponse)
    MergeFrom(*source);
  }
}

void ResumeSendResponse::MergeFrom(const ResumeSendResponse& from) {
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ResumeSendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_rc()) {
    mutable_rc()->::proto::ResponseCode::MergeFrom(from.rc());
  }
}

void ResumeSendResponse::CopyFrom(const ::google::protobuf::Message& from) {
  // @@protoc_insertion_point(generalized_copy_from_start:proto.ResumeSendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResumeSendResponse::CopyFrom(const ResumeSendResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:proto.ResumeSendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResumeSendResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_rc()) {
    if (!this->rc_->IsInitialized()) return false;
  }
  return true;
}

void ResumeSendResponse::Swap(ResumeSendResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResumeSendResponse::InternalSwap(ResumeSendResponse* other) {
  using std::swap;
  swap(rc_, other->rc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResumeSendResponse::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
namespace protobuf {
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::Message*
Arena::CreateMaybeMessage<::proto::Message>(Arena* arena) {
  return Arena::CreateInternal<::proto::Message>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::Head*
Arena::CreateMaybeMessage<::proto::Head>(Arena* arena) {
  return Arena::CreateInternal<::proto::Head>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::Body*
Arena::CreateMaybeMessage<::proto::Body>(Arena* arena) {
  return Arena::CreateInternal<::proto::Body>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ResponseCode*
Arena::CreateMaybeMessage<::proto::ResponseCode>(Arena* arena) {
  return Arena::CreateInternal<::proto::ResponseCode>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ListenRequest*
Arena::CreateMaybeMessage<::proto::ListenRequest>(Arena* arena) {
  return Arena::CreateInternal<::proto::ListenRequest>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ListenResponse*
Arena::CreateMaybeMessage<::proto::ListenResponse>(Arena* arena) {
  return Arena::CreateInternal<::proto::ListenResponse>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::Ping*
Arena::CreateMaybeMessage<::proto::Ping>(Arena* arena) {
  return Arena::CreateInternal<::proto::Ping>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::Pong*
Arena::CreateMaybeMessage<::proto::Pong>(Arena* arena) {
  return Arena::CreateInternal<::proto::Pong>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::LogoutRequest*
Arena::CreateMaybeMessage<::proto::LogoutRequest>(Arena* arena) {
  return Arena::CreateInternal<::proto::LogoutRequest>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::LogoutResponse*
Arena::CreateMaybeMessage<::proto::LogoutResponse>(Arena* arena) {
  return Arena::CreateInternal<::proto::LogoutResponse>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::NewConnectionRequest*
Arena::CreateMaybeMessage<::proto::NewConnectionRequest>(Arena* arena) {
  return Arena::CreateInternal<::proto::NewConnectionRequest>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::NewConnectionResponse*
Arena::CreateMaybeMessage<::proto::NewConnectionResponse>(Arena* arena) {
  return Arena::CreateInternal<::proto::NewConnectionResponse>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::CloseConnectionRequest*
Arena::CreateMaybeMessage<::proto::CloseConnectionRequest>(Arena* arena) {
  return Arena::CreateInternal<::proto::CloseConnectionRequest>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::CloseConnectionResponse*
Arena::CreateMaybeMessage<::proto::CloseConnectionResponse>(Arena* arena) {
  return Arena::CreateInternal<::proto::CloseConnectionResponse>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::DataRequest*
Arena::CreateMaybeMessage<::proto::DataRequest>(Arena* arena) {
  return Arena::CreateInternal<::proto::DataRequest>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::DataResponse*
Arena::CreateMaybeMessage<::proto::DataResponse>(Arena* arena) {
  return Arena::CreateInternal<::proto::DataResponse>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::PauseSendRequest*
Arena::CreateMaybeMessage<::proto::PauseSendRequest>(Arena* arena) {
  return Arena::CreateInternal<::proto::PauseSendRequest>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::PauseSendResponse*
Arena::CreateMaybeMessage<::proto::PauseSendResponse>(Arena* arena) {
  return Arena::CreateInternal<::proto::PauseSendResponse>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ResumeSendRequest*
Arena::CreateMaybeMessage<::proto::ResumeSendRequest>(Arena* arena) {
  return Arena::CreateInternal<::proto::ResumeSendRequest>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ResumeSendResponse*
Arena::CreateMaybeMessage<::proto::ResumeSendResponse>(Arena* arena) {
  return Arena::CreateInternal<::proto::ResumeSendResponse>(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
